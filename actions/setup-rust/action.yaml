name: Rust Setup
description: Rust tooling setup

inputs:
  cache-shared-key:
    description: Cache key used instead of the default job-based key.
    required: false

  cache-key:
    description: Cache key appended to the default job-based key.
    required: false

  cargo-registry-use-custom-github-auth:
    description: Whether to configure cargo with authentication to Github. Defaults to `false`.
    default: "false"
    required: false

  cargo-registry-github-app-id:
    description: Github App id used for cargo registry authentication.
    required: false

  cargo-registry-github-app-private-key:
    description: Github App private key used for cargo registry authentication.
    required: false

  cargo-registry-github-app-owner:
    description: Github App owner used for cargo registry authentication.
    default: ${{ github.repository_owner }}
    required: false

runs:
  using: composite
  steps:
    - name: Install stable toolchain
      uses: actions-rust-lang/setup-rust-toolchain@v1
      with:
        toolchain: stable
        cache: "false"

    - name: Setup sccache
      uses: mozilla-actions/sccache-action@v0.0.5
      env:
        SCCACHE_GHA_ENABLED: "true"
        RUSTC_WRAPPER: "sccache"

    - name: Cache toolchain and dependencies
      uses: Swatinem/rust-cache@v2
      with:
        shared-key: ${{ inputs.cache-shared-key }}
        key: ${{ inputs.cache-key }}

    - name: Install cargo-binstall
      uses: cargo-bins/cargo-binstall@main

    - name: Generate Github App token
      if: inputs.cargo-registry-use-custom-github-auth == 'true'
      id: app-token
      uses: actions/create-github-app-token@v1
      with:
        app-id: ${{ inputs.cargo-registry-github-app-id }}
        private-key: ${{ inputs.cargo-registry-github-app-private-key }}
        owner: ${{ inputs.cargo-registry-github-app-owner }}

    - name: Configure git for cargo dependencies
      if: inputs.cargo-registry-use-custom-github-auth == 'true'
      shell: bash
      run: |-
        git config --global http.https://github.com/.extraheader "AUTHORIZATION: basic $(echo -n "x-access-token:${GITHUB_TOKEN}" | base64)"
        echo "CARGO_NET_GIT_FETCH_WITH_CLI=true" >> "${GITHUB_ENV}"
      env:
        GITHUB_TOKEN: ${{ steps.app-token.outputs.token }}
